{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CASE\\\\Desktop\\\\app\\\\src\\\\comps\\\\page.js\";\n//imports\n//react\nimport React, { Component } from \"react\"; //materials\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Button from '@mui/material/Button';\nimport DiaWrap from '@mui/material/Dialog';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent'; //components\n\nimport Dialog from './dialog'; //javascript\n\nimport moment from 'moment';\nimport toastr from 'toastr';\nimport { Checkbox } from \"@mui/material\"; //master export\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class page extends Component {\n  //constructor\n  constructor(props) {\n    super(props);\n\n    this.dialogCallback = data => {\n      //functional syntax intentional\n      if (data.action === `submit`) {\n        //submitted\n        toastr.success(`Task added successfully!`, ``, {\n          'closeButton': true,\n          positionClass: 'toast-bottom-right'\n        });\n        this.setState({\n          rows: [...this.state.rows, data.data]\n        });\n        this.setState({\n          open: false\n        });\n      } else if (data.action === `cancel`) {\n        //cancelled\n        this.setState({\n          open: false\n        });\n      } else if (data.action === 'edit') {\n        this.editRow(data);\n        toastr.success(`Task edited successfully!`, ``, {\n          'closeButton': true,\n          positionClass: 'toast-bottom-right'\n        });\n        this.setState({\n          open: false\n        });\n      }\n    };\n\n    this.editRow = data => {\n      let newRows = [...this.state.rows];\n      newRows[data.index] = data.data;\n      this.setState({\n        rows: newRows\n      });\n    };\n\n    this.toggleIsComplete = index => {\n      let newRow = [...this.state.rows];\n      newRow[index]['checked'] = !newRow[index]['checked'];\n      this.setState({\n        rows: newRow\n      });\n    };\n\n    this.state = {\n      task: {\n        deadline: moment()\n      },\n      rows: [],\n      open: false,\n      type: \"add\",\n      index: -1,\n      data: {}\n    };\n  } //add task\n\n\n  addTask() {\n    this.setState({\n      type: \"add\"\n    });\n    this.setState({\n      index: -1\n    });\n    this.setState({\n      open: true\n    });\n  }\n\n  editTask(index) {\n    this.setState({\n      open: true\n    });\n    this.setState({\n      type: \"edit\"\n    });\n    this.setState({\n      index: index\n    });\n  } //callback from dialog input\n\n\n  //render\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DiaWrap, {\n        open: this.state.open,\n        onClose: () => this.dialogCallback(),\n        children: /*#__PURE__*/_jsxDEV(Dialog, {\n          type: this.state.type,\n          index: this.state.index,\n          data: this.state.data,\n          parentCallback: this.dialogCallback,\n          dataFromParent: this.state.task,\n          rowFromParent: this.state.rows\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          margin: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          sx: {\n            bgcolor: 'primary.dark',\n            color: 'white'\n          },\n          title: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-fw fa-bars\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 41\n              }, this), \"FRAMEWORKS\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 34\n            }, this)\n          }, void 0, false),\n          style: {\n            textAlign: 'center'\n          },\n          action: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => this.addTask(),\n              sx: {\n                width: 100,\n                marginRight: '7px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-fw fa-plus-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this), \"Add\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            bgcolor: 'white',\n            marginBottom: -1\n          },\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              sx: {\n                bgcolor: 'white'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    sx: {\n                      width: 0.1,\n                      color: 'gray'\n                    },\n                    children: \"Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    sx: {\n                      width: 0.1,\n                      color: 'gray'\n                    },\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    sx: {\n                      width: 0.1,\n                      color: 'gray'\n                    },\n                    children: \"Deadline\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    sx: {\n                      width: 0.1,\n                      color: 'gray'\n                    },\n                    children: \"Priority\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    sx: {\n                      width: 0.1,\n                      color: 'gray'\n                    },\n                    children: \"Is Complete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    sx: {\n                      width: 0.1,\n                      color: 'gray'\n                    },\n                    children: \"Action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: this.state.rows.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: row.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: row.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: new Date(row.deadline).toLocaleDateString(\"en-US\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: row.priority\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: row.checked ? /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: row.checked,\n                      onChange: e => {\n                        this.toggleIsComplete(index);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 86\n                    }, this) : /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: row.checked,\n                      onChange: e => {\n                        this.toggleIsComplete(index);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 47\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: [!row.checked && /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      sx: {\n                        width: 100\n                      },\n                      onClick: () => this.editTask(index),\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-fw fa-edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 135,\n                        columnNumber: 53\n                      }, this), \"UPDATE\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 66\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      onClick: () => {\n                        this.setState(prevState => ({\n                          rows: [...prevState.rows.slice(0, index), ...prevState.rows.slice(index + 1)]\n                        }));\n                        toastr.success(`Task deleted successfully!`, ``, {\n                          'closeButton': true,\n                          positionClass: 'toast-bottom-right'\n                        });\n                      },\n                      color: \"error\",\n                      sx: {\n                        bgcolor: '#f44336',\n                        width: 100\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-fw fa-times-circle\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 53\n                      }, this), \"DELETE\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 45\n                  }, this)]\n                }, row.title, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/CASE/Desktop/app/src/comps/page.js"],"names":["React","Component","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Button","DiaWrap","Card","CardHeader","CardContent","Dialog","moment","toastr","Checkbox","page","constructor","props","dialogCallback","data","action","success","positionClass","setState","rows","state","open","editRow","newRows","index","toggleIsComplete","newRow","task","deadline","type","addTask","editTask","render","margin","bgcolor","color","textAlign","width","marginRight","marginBottom","map","row","title","description","Date","toLocaleDateString","priority","checked","e","prevState","slice"],"mappings":"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","sourcesContent":["//imports\r\n//react\r\nimport React, { Component } from \"react\";\r\n//materials\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Button from '@mui/material/Button';\r\nimport DiaWrap from '@mui/material/Dialog';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\n//components\r\nimport Dialog from './dialog';\r\n//javascript\r\nimport moment from 'moment';\r\nimport toastr from 'toastr';\r\nimport { Checkbox } from \"@mui/material\";\r\n//master export\r\nexport default class page extends Component {\r\n    //constructor\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: {\r\n                deadline: moment()\r\n            },\r\n            rows: [],\r\n            open: false,\r\n            type: \"add\",\r\n            index: -1,\r\n            data: {}\r\n        };\r\n    }\r\n\r\n    //add task\r\n    addTask() {\r\n        this.setState({type: \"add\"})\r\n        this.setState({index: -1})\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    editTask(index) {\r\n        this.setState({open: true});\r\n        this.setState({type: \"edit\"});\r\n        this.setState({index: index});\r\n    }\r\n\r\n    //callback from dialog input\r\n    dialogCallback = (data) => {//functional syntax intentional\r\n        if (data.action === `submit`) {//submitted\r\n            toastr.success(`Task added successfully!`, ``, { 'closeButton': true, positionClass: 'toast-bottom-right' });\r\n            this.setState({ rows: [...this.state.rows, data.data] });\r\n            this.setState({ open: false });\r\n        } else if (data.action === `cancel`) {//cancelled\r\n            this.setState({ open: false });\r\n        } else if (data.action === 'edit') {\r\n            this.editRow(data)\r\n            toastr.success(`Task edited successfully!`, ``, { 'closeButton': true, positionClass: 'toast-bottom-right' });\r\n            this.setState({ open: false });\r\n        }\r\n    }\r\n\r\n    editRow = (data) => {\r\n        let newRows = [...this.state.rows]\r\n        newRows[data.index] = data.data\r\n        \r\n        this.setState({rows: newRows})\r\n    }\r\n\r\n    toggleIsComplete = (index) => {\r\n        let newRow = [...this.state.rows]\r\n        newRow[index]['checked'] = !newRow[index]['checked']\r\n        this.setState({rows: newRow})\r\n    }\r\n\r\n    //render\r\n    render() {\r\n        return (\r\n            <>\r\n                <DiaWrap\r\n                    open={this.state.open}\r\n                    onClose={() => this.dialogCallback()}>\r\n                    <Dialog\r\n                        type={this.state.type}\r\n                        index={this.state.index}\r\n                        data={this.state.data}\r\n                        parentCallback={this.dialogCallback}\r\n                        dataFromParent={this.state.task}\r\n                        rowFromParent={this.state.rows} >\r\n                    </Dialog>\r\n                </DiaWrap>\r\n                {/*master card*/}\r\n                <Card sx={{ margin: '20px' }}>\r\n                    {/*card header*/}\r\n                    <CardHeader sx={{ bgcolor: 'primary.dark', color: 'white' }}\r\n                        title={<><small><i className='fa fa-fw fa-bars'></i>FRAMEWORKS</small></>}\r\n                        style={{ textAlign: 'center' }}\r\n                        action={\r\n                            <>\r\n                                {/*button*/}\r\n                                <Button variant=\"contained\" onClick={() => this.addTask()} sx={{ width: 100, marginRight: '7px' }}>\r\n                                    <i className=\"fa fa-fw fa-plus-circle\"></i>Add\r\n                                </Button>\r\n                            </>\r\n                        } />\r\n                    {/*card content*/}\r\n                    <CardContent sx={{ bgcolor: 'white', marginBottom: -1 }}>\r\n                        <TableContainer>\r\n                            <Table sx={{ bgcolor: 'white' }}>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\" sx={{ width: 0.1, color: 'gray' }}>Title</TableCell>\r\n                                        <TableCell align=\"center\" sx={{ width: 0.1, color: 'gray' }}>Description</TableCell>\r\n                                        <TableCell align=\"center\" sx={{ width: 0.1, color: 'gray' }}>Deadline</TableCell>\r\n                                        <TableCell align=\"center\" sx={{ width: 0.1, color: 'gray' }}>Priority</TableCell>\r\n                                        <TableCell align=\"center\" sx={{ width: 0.1, color: 'gray' }}>Is Complete</TableCell>\r\n                                        <TableCell align=\"center\" sx={{ width: 0.1, color: 'gray' }}>Action</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.rows.map((row, index) => (\r\n                                        <TableRow key={row.title}>\r\n                                            <TableCell align='center'>{row.title}</TableCell>\r\n                                            <TableCell align=\"center\">{row.description}</TableCell>\r\n                                            <TableCell align=\"center\">{new Date(row.deadline).toLocaleDateString(\"en-US\")}</TableCell>\r\n                                            <TableCell align=\"center\">{row.priority}</TableCell>\r\n                                            <TableCell align=\"center\">{row.checked ? <Checkbox checked={row.checked} onChange={(e) => {this.toggleIsComplete(index)}}/>\r\n                                            : <Checkbox checked={row.checked} onChange={(e) => {this.toggleIsComplete(index)}}/>}</TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                {!row.checked && <Button variant=\"contained\" sx={{ width: 100 }} onClick={() => this.editTask(index)}>\r\n                                                    <i className=\"fa fa-fw fa-edit\"></i>UPDATE\r\n                                                </Button>}\r\n                                                <Button variant=\"contained\" \r\n                                                    onClick={() => {this.setState((prevState) => ({\r\n                                                        rows: [...prevState.rows.slice(0, index), ...prevState.rows.slice(index + 1)]}));\r\n                                                        toastr.success(`Task deleted successfully!`, ``, { 'closeButton': true, positionClass: 'toast-bottom-right' });\r\n                                                    }}\r\n                                                    color='error' \r\n                                                    sx={{ bgcolor: '#f44336', width: 100 }}\r\n                                                >\r\n                                                    <i className=\"fa fa-fw fa-times-circle\"></i>DELETE\r\n                                                </Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </CardContent>\r\n                </Card>\r\n            </>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}